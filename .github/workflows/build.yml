name: X1 Wallet Firmware

on:
  push:
    tags:
      - v*
    branches:
      - release**
    paths:
      - "version.txt"

jobs:
  build-firmwares:
    strategy:
      matrix:
        firmware: [Main]
        target: [Release]
        coin_support: ["BTC_ONLY", "MULTI_COIN"] # Builds both BTC_ONLY and MULTI_COIN variants
    uses: ./.github/workflows/containerized-build.yml
    with:
      firmware: ${{ matrix.firmware }}
      target: ${{ matrix.target }}
      coin_support_variant: ${{ matrix.coin_support }}
    secrets: inherit

  create-release:
    needs: build-firmwares # Depends on all firmwares being built
    runs-on: ubuntu-latest
    if: ${{ github.ref_type }} == 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./ # Downloads all artifacts to the current directory

      - name: Publish a release
        env:
          TAG_NAME: ${{ github.ref_name }}
          auth_token: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
        run: |
          # Calculate SHA256 hash for the MULTI_COIN firmware
          # The path assumes download-artifact placed it in Main-Release-MULTI_COIN-outputs/build/
          chkmain_multicoin=$(sha256sum Main-Release-MULTI_COIN-outputs/build/Cypherock-Main.bin | cut -f -1 -d ' ')

          # Calculate SHA256 hash for the BTC_ONLY firmware
          # The path assumes download-artifact placed it in Main-Release-BTC_ONLY-outputs/build/
          # The filename is Cypherock-Main-btc.bin due to the CMakeLists.txt modification
          chkmain_btc_only=$(sha256sum Main-Release-BTC_ONLY-outputs/build/Cypherock-Main-btc.bin | cut -f -1 -d ' ')

          APP_VERSION=$(cat version.txt | grep firmware | cut -f 2-2 -d '=' | awk -F ':' '{ print 0+$1 "." 0+$2 "." $3*2**8 + $4 }')
          HW_VERSION=$(cat version.txt | grep hardware | cut -f 2-2 -d '=' | awk -F ':' '{ print 0+$1 "." 0+$2 "." $3*2**8 + $4 }')

          echo "Application version: ${APP_VERSION}"
          echo "Hardware version: ${HW_VERSION}"

          # Create the release with both firmware hashes in the body
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${auth_token}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${REPOSITORY}/releases \
            -d '{
              "tag_name":"'${TAG_NAME}'",
              "target_commitish":"main",
              "name":"'${TAG_NAME}'",
              "body":"Application version: '${APP_VERSION}'\r\nHardware version: '${HW_VERSION}'\r\n## SHA256 of binaries:\r\n**Cypherock-Main.bin** : '${chkmain_multicoin}' \r\n**Cypherock-Main-btc.bin** : '${chkmain_btc_only}'",
              "draft":true,
              "prerelease":false,
              "generate_release_notes":true
            }' > output.txt

          # Extract upload_url for subsequent asset uploads
          echo "upload_url=$(cat output.txt | grep "\"upload_url\":" | cut -f 4-4 -d '"' | cut -f 1-1 -d '{')" >> $GITHUB_ENV

      - name: Upload assets
        env:
          auth_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ env.upload_url }} # Use the extracted upload_url
        run: |
          # Upload the MULTI_COIN firmware binary
          content_type_multicoin=$(file -b --mime-type Main-Release-MULTI_COIN-outputs/build/Cypherock-Main.bin)
          curl -X POST \
            -H "Content-Type: ${content_type_multicoin}" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${auth_token}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${upload_url}?name=Cypherock-Main.bin" \
            --data-binary @Main-Release-MULTI_COIN-outputs/build/Cypherock-Main.bin

          # Upload the BTC_ONLY firmware binary
          content_type_btc_only=$(file -b --mime-type Main-Release-BTC_ONLY-outputs/build/Cypherock-Main-btc.bin)
          curl -X POST \
            -H "Content-Type: ${content_type_btc_only}" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${auth_token}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${upload_url}?name=Cypherock-Main-btc.bin" \
            --data-binary @Main-Release-BTC_ONLY-outputs/build/Cypherock-Main-btc.bin

          # Upload version.txt
          content_type_version=$(file -b --mime-type version.txt)
          curl -X POST \
            -H "Content-Type: ${content_type_version}" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${auth_token}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${upload_url}?name=version.txt" \
            --data-binary @version.txt
